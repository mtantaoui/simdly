name: Test Publish (Dry Run)

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Build with CPU feature detection
        run: cargo build --release

      - name: Run tests
        run: |
          cargo test --release

      - name: Build documentation
        run: |
          RUSTDOCFLAGS="--cfg avx2" cargo doc --all-features --no-deps

  dry-run-publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Dry run publish
        run: |
          echo "üîç DRY RUN MODE - Testing crate publication for develop branch"
          cargo publish --dry-run --token ${{ secrets.CRATE_TOKEN }}