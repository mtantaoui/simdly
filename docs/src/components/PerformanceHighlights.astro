---
// Performance Highlights Component - Animated performance statistics
---

<div class="performance-highlights">
  <div class="highlights-header">
    <h3>‚ö° Performance at a Glance</h3>
    <p>Real benchmark results from production workloads</p>
  </div>
  
  <div class="highlights-grid">
    <div class="highlight-card primary">
      <div class="highlight-icon">üöÄ</div>
      <div class="highlight-number" data-target="8.2">0</div>
      <div class="highlight-suffix">x</div>
      <div class="highlight-label">Average SIMD Speedup</div>
      <div class="highlight-detail">Complex math functions (1MB)</div>
    </div>
    
    <div class="highlight-card secondary">
      <div class="highlight-icon">‚ö°</div>
      <div class="highlight-number" data-target="13.3">0</div>
      <div class="highlight-suffix">x</div>
      <div class="highlight-label">Peak Performance</div>
      <div class="highlight-detail">cos() with 1MB dataset</div>
    </div>
    
    <div class="highlight-card tertiary">
      <div class="highlight-icon">üéØ</div>
      <div class="highlight-number" data-target="15">0</div>
      <div class="highlight-suffix">+</div>
      <div class="highlight-label">Math Functions</div>
      <div class="highlight-detail">Optimized with SIMD</div>
    </div>
    
    <div class="highlight-card quaternary">
      <div class="highlight-icon">üèóÔ∏è</div>
      <div class="highlight-number" data-target="2">0</div>
      <div class="highlight-suffix"></div>
      <div class="highlight-label">Architectures</div>
      <div class="highlight-detail">AVX2 + NEON support</div>
    </div>
  </div>
</div>

<style>
  .performance-highlights {
    margin: 2rem 0;
    padding: 0;
  }

  .highlights-header {
    text-align: center;
    margin-bottom: 2rem;
  }

  .highlights-header h3 {
    color: #f1f5f9;
    margin: 0 0 0.5rem 0;
    font-size: 1.5rem;
    font-weight: 700;
  }

  .highlights-header p {
    color: #94a3b8;
    margin: 0;
    font-size: 0.9rem;
  }

  .highlights-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    max-width: 1000px;
    margin: 0 auto;
  }

  .highlight-card {
    background: rgba(30, 41, 59, 0.6);
    border: 1px solid rgba(148, 163, 184, 0.2);
    border-radius: 16px;
    padding: 2rem 1.5rem;
    text-align: center;
    position: relative;
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
    overflow: hidden;
  }

  .highlight-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, transparent, var(--accent-color), transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .highlight-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.3);
    border-color: rgba(148, 163, 184, 0.4);
  }

  .highlight-card:hover::before {
    opacity: 1;
  }

  .highlight-card.primary {
    --accent-color: #10b981;
    border-color: rgba(16, 185, 129, 0.2);
  }

  .highlight-card.secondary {
    --accent-color: #3b82f6;
    border-color: rgba(59, 130, 246, 0.2);
  }

  .highlight-card.tertiary {
    --accent-color: #8b5cf6;
    border-color: rgba(139, 92, 246, 0.2);
  }

  .highlight-card.quaternary {
    --accent-color: #f59e0b;
    border-color: rgba(245, 158, 11, 0.2);
  }

  .highlight-icon {
    font-size: 2rem;
    margin-bottom: 1rem;
    filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.2));
  }

  .highlight-number {
    display: inline-block;
    font-size: 3rem;
    font-weight: 800;
    color: var(--accent-color);
    text-shadow: 0 0 20px rgba(255, 255, 255, 0.1);
    margin-right: 0.25rem;
  }

  .highlight-suffix {
    display: inline-block;
    font-size: 2rem;
    font-weight: 600;
    color: var(--accent-color);
    opacity: 0.8;
  }

  .highlight-label {
    font-size: 1.1rem;
    font-weight: 600;
    color: #f1f5f9;
    margin: 0.5rem 0 0.25rem 0;
  }

  .highlight-detail {
    font-size: 0.85rem;
    color: #94a3b8;
    margin: 0;
  }

  @media (max-width: 768px) {
    .highlights-grid {
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 1rem;
    }
    
    .highlight-card {
      padding: 1.5rem 1rem;
    }
    
    .highlight-number {
      font-size: 2.5rem;
    }
    
    .highlight-suffix {
      font-size: 1.5rem;
    }
  }
</style>

<script>
  // Animate numbers when they come into view
  function animateNumber(element, target, duration = 2000) {
    let startTime = null;
    const startValue = 0;
    
    function updateNumber(timestamp) {
      if (!startTime) startTime = timestamp;
      const progress = Math.min((timestamp - startTime) / duration, 1);
      
      // Easing function for smooth animation
      const easeOut = 1 - Math.pow(1 - progress, 3);
      const currentValue = startValue + (target - startValue) * easeOut;
      
      element.textContent = currentValue.toFixed(1);
      
      if (progress < 1) {
        requestAnimationFrame(updateNumber);
      } else {
        // Ensure final value is exact
        element.textContent = target.toString();
      }
    }
    
    requestAnimationFrame(updateNumber);
  }

  // Intersection Observer to trigger animations when visible
  function setupNumberAnimations() {
    const numbers = document.querySelectorAll('.highlight-number[data-target]');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting && !entry.target.dataset.animated) {
          const target = parseFloat(entry.target.dataset.target);
          animateNumber(entry.target, target);
          entry.target.dataset.animated = 'true';
        }
      });
    }, {
      threshold: 0.5,
      rootMargin: '0px 0px -50px 0px'
    });
    
    numbers.forEach(number => observer.observe(number));
  }

  // Initialize animations when DOM is ready
  document.addEventListener('DOMContentLoaded', setupNumberAnimations);
</script>